<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-2.5.xsd  
                     	http://www.springframework.org/schema/aop 
                     	http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
                     	http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context-2.5.xsd">


<!-- 	<bean id="redisSentinelConfiguration" -->
<!-- 		class="org.springframework.data.redis.connection.RedisSentinelConfiguration"> -->
<!-- 		<constructor-arg index="0">  -->
<!-- 			<value>master1</value> -->
<!-- 		</constructor-arg> -->
<!-- 		<constructor-arg index="1">  -->
<!-- 			<set> -->
<!-- 				<value>192.168.2.20:26377</value> -->
<!-- 				<value>192.168.2.20:26378</value> -->
<!-- 				<value>192.168.2.20:26379</value> -->
				<!-- <value>192.168.10.76:26379</value>
				<value>192.168.10.106:26379</value> -->
<!-- 			</set> -->
<!-- 		</constructor-arg> -->
<!-- 	</bean> -->
	
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig"> 
		<property name="maxIdle" value="${redis.maxIdle}" /> 
		<property name="testOnBorrow" value="${redis.testOnBorrow}" /> 
	</bean>	
		
	<bean id="jedisConnectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
<!-- 		<constructor-arg index="0" ref="redisSentinelConfiguration" />  集群开启-->
<!-- 		<constructor-arg index="1" ref="jedisPoolConfig" />  集群开启-->
<!-- 		<property name="usePool" value="true"></property> 集群开启 -->
		<property name="hostName" value="${redis.host}" />
		<property name="port" value="${redis.port}" /> 
		<property name="password" value="${redis.password}" />  
		<property name="timeout" value="${redis.timeout}" />
		<property name="poolConfig" ref="jedisPoolConfig"></property><!-- 集群删除 -->
	</bean>
	<!-- windows下配置	 
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig"> 
		<property name="maxIdle" value="${redis.maxIdle}" /> 
		<property name="testOnBorrow" value="${redis.testOnBorrow}" /> 
	</bean>	
		
	<bean id="jedisConnectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<constructor-arg index="0" ref="jedisPoolConfig" />
		<property name="usePool" value="true"></property> 
		<property name="hostName" value="${redis.host}" />
		<property name="port" value="${redis.port}" /> 
		<property name="timeout" value="${redis.timeout}" />
	</bean>-->

	<!-- redis template definition -->
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="jedisConnectionFactory" />
		<property name="keySerializer">
			<bean
				class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
		<property name="valueSerializer">
			<bean
				class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
		</property>
		<property name="hashKeySerializer">
			<bean
				class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
		<property name="hashValueSerializer">
			<bean
				class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
		</property>
	</bean>
	<!-- 加载Reids属性配置文件结束 -->
</beans> 
